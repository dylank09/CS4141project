
/*
* @authors
* Dylan Kearney
* Padraig McCarthy
* Aaron Foster
*/

public class mainClassProj {

private String[] workbook;
private int nextPos;
private int numSheets;



	public mainClassProj(int capacity) {
		workbook = new String[capacity];
		workbook[1] = "Sheet1";
		workbook[2] = "Sheet2";
		workbook[3] = "Sheet3";
		nextPos = 4;
		numSheets = 3;
		//each name must be unique (case-insensitive)
		//at least one sheet always
		//sheet must have at least one character
		//sheets can only have A-Z, 0-9
		
	}
	
	public boolean add() {
		if (nextPos < workbook.length) {  //if the next position is less than the capacity of the array
			String SheetN = "Sheet" + nextPos;  //creates the name for the next sheet
			workbook[nextPos] = new String(SheetN);  //creates the new sheet
			nextPos ++;  
			numSheets ++;
			return true;
		}
		else {
			return false;
		}
		
	}
	
	public int remove(String sheetName) {
		int i, index = 0;
		if(numSheets > 1) {
			for(i = 0 ; i <= numSheets ; i++) {  //search for the sheetName
				if(workbook[i] == sheetName) {
					index = i;
					//workbook[index] = ***remove this sheetName from the array***
					numSheets --;
					break;
				}
				else {
					index = -1;
				}
			}
		}
		else {
			index = -1;
		}
		return index;
	}
	
	public String remove(int index) {
		String val;
		int i;
		if (index >= 1 && index <= numSheets) {
			val = workbook[index]; //val gets the name of the sheet at the given index
			if(index == numSheets - 1) {
				workbook[index] = ""; //not perfect
				numSheets --;
				
			}
			else {
				for(i = index ; i < numSheets ; i ++) {  //loop to move each sheet after the removed sheet back one pos
					workbook[i] = workbook[i+1];
				}
			numSheets --;	
			}
			
		}
		else {
			val = "";
		}
		return val;

	}
	
	

}
